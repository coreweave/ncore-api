// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coreweave/ncore-api/pkg/s3 (interfaces: HttpPresigner)

// Package s3 is a generated GoMock package.
package s3

import (
	reflect "reflect"

	v4 "github.com/aws/aws-sdk-go-v2/aws/signer/v4"
	gomock "github.com/golang/mock/gomock"
)

// MockHttpPresigner is a mock of HttpPresigner interface.
type MockHttpPresigner struct {
	ctrl     *gomock.Controller
	recorder *MockHttpPresignerMockRecorder
}

// MockHttpPresignerMockRecorder is the mock recorder for MockHttpPresigner.
type MockHttpPresignerMockRecorder struct {
	mock *MockHttpPresigner
}

// NewMockHttpPresigner creates a new mock instance.
func NewMockHttpPresigner(ctrl *gomock.Controller) *MockHttpPresigner {
	mock := &MockHttpPresigner{ctrl: ctrl}
	mock.recorder = &MockHttpPresignerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpPresigner) EXPECT() *MockHttpPresignerMockRecorder {
	return m.recorder
}

// GetObject mocks base method.
func (m *MockHttpPresigner) GetObject(arg0, arg1 string, arg2 int64) (*v4.PresignedHTTPRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v4.PresignedHTTPRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObject indicates an expected call of GetObject.
func (mr *MockHttpPresignerMockRecorder) GetObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockHttpPresigner)(nil).GetObject), arg0, arg1, arg2)
}
